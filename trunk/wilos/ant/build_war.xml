<?xml version="1.0"?>
<!-- 
	Wilos Is a cLever process Orchestration Software - http://wilos.berlios.de
   	Copyright (C) 2006-2007 Paul Sabatier University, IUP ISI (Toulouse, France) <massie@irit.fr>

   	This program is free software; you can redistribute it and/or modify it under the terms of the GNU
   	General Public License as published by the Free Software Foundation; either version 2 of the License,
	or (at your option) any later version.

	This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
	even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License along with this program; if not,
	write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  
-->
<!-- The target archive will be created in the dist folder -->
<project name="Wilos (War)" default="build.war" basedir="../">

	<!-- Configure the context path for this application -->
	<property name="project.name" value="Wilos" />
	<property name="build.dir" value="${basedir}/tmp" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="ant.dir" value="${basedir}/ant" />
	<property name="src.java.dir" value="${src.dir}" />
	<property name="web.dir" value="${basedir}/WebContent" />
	<property name="lib.dir" value="${basedir}/WebContent/WEB-INF/lib" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property file="${ant.dir}/tomcat.properties" />

	<!-- Taches Tomcat -->
	<taskdef file="${ant.dir}/tomcatTask.properties">
		<classpath>
			<pathelement path="${ant.dir}/lib/catalina-ant.jar" />
		</classpath>
	</taskdef>

	<!-- Taches webservices -->
	<taskdef name="apt" classname="com.sun.tools.ws.ant.Apt">
		   <classpath refid="classpath" />  
	</taskdef>
	
	<!-- Libraries Import -->
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.*" />
		</fileset>
	</path>

	<!-- Building space clean up -->
	<target name="clean" depends="clean_dist">
		<delete dir="${build.dir}" />
	</target>

	<target name="clean_dist">
		<delete dir="${dist.dir}" />
	</target>

	<!-- Prepare all directories -->
	<target name="prepare" depends="clean" description="Create build directories.">
		<mkdir dir="${build.dir}/${project.name}" />
		<mkdir dir="${build.dir}/${project.name}/images" />
		<mkdir dir="${build.dir}/${project.name}/css" />
		<mkdir dir="${build.dir}/${project.name}/javascript" />
		<mkdir dir="${build.dir}/${project.name}/WEB-INF" />
		<mkdir dir="${build.dir}/${project.name}/META-INF" />
		<mkdir dir="${build.dir}/${project.name}/WEB-INF/classes" />
		<mkdir dir="${build.dir}/${project.name}/WEB-INF/lib" />
		<mkdir dir="${dist.dir}" />
	</target>



	<!-- Copie des Jar -->
	<target name="copyJars">
		<copy todir="${build.dir}/${project.name}/WEB-INF/lib">
			<fileset dir="${lib.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>
	
	<!-- Generate Webservices -->
	<target name="generate-webservices" description="Compile webservices">
		<mkdir dir="${build.dir}/Wilos-webservices-server-generated" />
		<mkdir dir="${build.dir}/Wilos-webservices-server-generated/src" />
		
		<apt
		   debug="${debug}"
		   verbose="${verbose}"
		   destdir="${build.dir}/Wilos-webservices-server-generated"
		   sourcedestdir="${build.dir}/Wilos-webservices-server-generated/src"
		   sourcepath="${src.java.dir}">
		   <classpath refid="classpath" /> 
		   
		   <source dir="${src.java.dir}">		  
		      <include name="**/webservices/*.java"/>
		   </source>			
		</apt>
		
		<delete dir="${build.dir}/Wilos-webservices-server-generated/src" />
		
		<jar destfile="${lib.dir}/Wilos-webservices-server-generated.jar">
			<fileset dir="${build.dir}/Wilos-webservices-server-generated/">
				<include name="**/*.*" />
			</fileset>
		</jar>
		
		<delete dir="${build.dir}/Wilos-webservices-server-generated" />	
	</target>

	<!-- Build Target -->
	<target name="build" depends="prepare,generate-webservices,copyJars" description="Compile Java files and copy static files.">
		<!-- web -->
		<copy todir="${build.dir}/${project.name}">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>	

		<!-- java sources -->
		<javac srcdir="${src.java.dir}" destdir="${build.dir}/${project.name}/WEB-INF/classes" source="1.5">
			<classpath refid="classpath" />
			<include name="**/*.java" />
			<include name="**/*.xml" />
			<include name="**/*.properties" />
		</javac>

		<copy todir="${build.dir}/${project.name}/WEB-INF/classes">
			<fileset dir="${src.java.dir}">
				<include name="**/*.xml" />
				<include name="**/*.tld" />
				<include name="**/*.properties" />
			</fileset>
		</copy>


	</target>

	<!-- WebArchive Building -->
	<target name="build.war" depends="build">
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}" />
		<war destfile="${dist.dir}/${project.name}.war" webxml="${build.dir}/${project.name}/WEB-INF/web.xml" excludes="${build.dir}/${project.name}/WEB-INF/web.xml" manifest="${build.dir}/${project.name}/META-INF/MANIFEST.MF">
			<fileset dir="${build.dir}/${project.name}/">
				<include name="**/*.*" />
			</fileset>
		</war>
		<delete dir="${build.dir}" />
	</target>

	<!-- ============================================================================= -->

	<!-- Lancement de Tomcat -->
	<target name="tomcat_run_win">
		<exec command="${tomcat.bin.dir}/startup.bat" dir="${tomcat.bin.dir}" />
	</target>

	<target name="tomcat_shutdown_win">
		<exec command="${tomcat.bin.dir}/shutdown.bat" dir="${tomcat.bin.dir}" />
	</target>

	<target name="tomcat_run_linux">
		<exec command="${tomcat.bin.dir}/startup.sh" dir="${tomcat.bin.dir}" />
	</target>

	<target name="tomcat_shutdown_linux">
		<exec command="${tomcat.bin.dir}/shutdown.sh" dir="${tomcat.bin.dir}" />
	</target>

	<!-- Gestion du serveur -->

	<target name="tomcat_deploy" description="Install application in Tomcat" depends="build.war">
		<deploy url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${project.name}" war="file:${dist.dir}/${project.name}.war" />
	</target>

	<target name="tomcat_undeploy" description="Remove application in Tomcat">
		<undeploy url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${project.name}" />
	</target>

	<target name="tomcat_redeploy" description="Remove application in Tomcat" depends="build.war">
		<undeploy url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${project.name}" />
		<deploy url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${project.name}" war="file:${dist.dir}/${project.name}.war" />
	</target>

	<target name="tomcat_reload" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${project.name}" />
	</target>
	<!--
	<target name="tomcat_start" description="Start Tomcat application">
		<start url="${tomcat.manager.url}"
	            username="${tomcat.username}"
	            password="${tomcat.password}"
	            path="/${project.name}"/>
	</target>
	
	 
	<target name="tomcat_stop" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}"
	            username="${tomcat.username}"
	            password="${tomcat.password}"
	            path="/${project.name}"/>
	</target>
	-->
	<target name="tomcat_listapp" description="List Tomcat applications">
		<list url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" />
	</target>

</project>

